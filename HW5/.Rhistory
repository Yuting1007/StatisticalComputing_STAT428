options(scipen = 1, digits = 4, width = 80)
library(knitr)
opts_chunk$set(echo=FALSE,
cache=TRUE, autodep=TRUE, cache.comments=FALSE,
message=FALSE, warning=FALSE)
grd = FALSE
n = 100
x = rnorm(n, 10, 1)
m = mean(x)
Tboot <- numeric(B)
B = 10000
Tboot <- numeric(B)
for (b in 1 : B) {
xb <- sample(x, n, replace=TRUE)
Tboot[b] <- mean(xb)
}
(se <- sd(Tboot))
norm_sd <- 1 / 5
(se_theory <- norm_sd / sqrt(n))
zval <- qnorm(.975)
(lower <- m - zval * se)
(upper <- m + zval * se)
jackknife_sd=function(x){
n=length(x)
jack_sample=numeric(n)
for (i in 1:n){
jack_sample[i]=sd(x[-i])
}
#bias
bias_jack=(n-1)*(mean(jack_sample)-sd(x))
se_jack=sqrt((n-1) * mean((jack_sample - mean(jack_sample))^2))
return (c(bias_jack,se_jack))
}
x <- rnorm(1000, mean = 10, sd = 1)
v <- jackknife_sd(x)
(v)
install.packages("DAAG")
library(DAAG)
library(DAAG)
attach(ironslag)
n <- length(magnetic) #in DAAG ironslag
e1 <- e2 <- e3 <- e4 <- numeric(n*(n-1)) # 'leave two out' has n(n-1) combinations
for (i in 1:n){
for (j in i:n){
if (i != j){
y=magnetic[c(-i,-j)]
x=chemical[c(-i,-j)]
J1 <- lm(y ~ x)
yhat11 <- J1$coef[1] + J1$coef[2] * chemical[i]
yhat12 <- J1$coef[1] + J1$coef[2] * chemical[j]
e1[(i-1)*n+j] <- sqrt((magnetic[i] - yhat11)^2+(magnetic[j] - yhat12)^2)
J2 <- lm(y ~ x + I(x^2))
yhat21 <- J2$coef[1] + J2$coef[2] * chemical[i] +
J2$coef[3] * chemical[i]^2
yhat22 <- J2$coef[1] + J2$coef[2] * chemical[j] +
J2$coef[3] * chemical[j]^2
e2[(i-1)*n+j] <- sqrt((magnetic[i] - yhat21)^2+(magnetic[j] - yhat22)^2)
J3 <- lm(log(y) ~ x)
logyhat31 <- J3$coef[1] + J3$coef[2] * chemical[i]
logyhat32 <- J3$coef[1] + J3$coef[2] * chemical[j]
yhat31 <- exp(logyhat31)
yhat32 <- exp(logyhat32)
e3[(i-1)*n+j] <- sqrt((magnetic[i] - yhat31)^2+(magnetic[j] - yhat32)^2)
J4 <- lm(log(y) ~ log(x))
logyhat41 <- J4$coef[1] + J4$coef[2] * log(chemical[i])
logyhat42 <- J4$coef[1] + J4$coef[2] * log(chemical[j])
yhat41 <- exp(logyhat41)
yhat42 <- exp(logyhat42)
e4[(i-1)*n+j] <- sqrt((magnetic[i] - yhat41)^2+(magnetic[j] - yhat42)^2)
}
}
}
# estimates for prediction error
c(mean(e1^2), mean(e2^2), mean(e3^2), mean(e4^2))
